{"version":3,"file":"botium-connector-alexa-smapi-cjs.js","sources":["../index.js"],"sourcesContent":["const util = require('util')\r\nconst askApi = require('ask-cli/lib/api/api-wrapper')\r\nconst askConstants = require('ask-cli/lib/utils/constants')\r\nconst askTools = require('ask-cli/lib/utils/tools')\r\nconst debug = require('debug')('botium-connector-alexa-smapi')\r\n\r\nclass BotiumConnectorAlexaSmapi {\r\n  constructor ({ queueBotSays, caps }) {\r\n    this.queueBotSays = queueBotSays\r\n    this.caps = caps\r\n  }\r\n\r\n  Validate () {\r\n    debug('Validate called')\r\n    if (this.caps['ALEXA_SMAPI_API'] && this.caps['ALEXA_SMAPI_API'] !== 'simulation' && this.caps['ALEXA_SMAPI_API'] !== 'invocation') throw new Error('ALEXA_SMAPI_API capability invalid (allowed values: \"simulation\", \"invoication\"')\r\n    if (!this.caps['ALEXA_SMAPI_SKILLID']) throw new Error('ALEXA_SMAPI_SKILLID capability required')\r\n\r\n    return Promise.resolve()\r\n  }\r\n\r\n  Build () {\r\n    debug('Build called')\r\n    this.api = this.caps['ALEXA_SMAPI_API'] || 'simulation'\r\n    this.skillId = this.caps['ALEXA_SMAPI_SKILLID']\r\n    this.locale = this.caps['ALEXA_SMAPI_LOCALE'] || 'en-US'\r\n\r\n    if (this.caps['ALEXA_SMAPI_REFRESHTOKEN'] || this.caps['ALEXA_SMAPI_ACCESSTOKEN']) {\r\n      this.profile = askConstants.PLACEHOLDER.ENVIRONMENT_VAR.PROFILE_NAME\r\n\r\n      process.env.ASK_REFRESH_TOKEN = this.caps['ALEXA_SMAPI_REFRESHTOKEN']\r\n      process.env.ASK_ACCESS_TOKEN = this.caps['ALEXA_SMAPI_ACCESSTOKEN']\r\n    } else {\r\n      this.profile = this.caps['ALEXA_SMAPI_AWSPROFILE'] || 'default'\r\n    }\r\n    return Promise.resolve()\r\n  }\r\n\r\n  Start () {\r\n    debug('Start called')\r\n    return Promise.resolve()\r\n  }\r\n\r\n  UserSays (msg) {\r\n    debug('UserSays called')\r\n    if (this.api === 'simulation') {\r\n      return new Promise((resolve, reject) => {\r\n        askApi.callSimulateSkill(null, msg.messageText, this.skillId, this.locale, this.profile, debug.enabled, (data) => {\r\n          const callResponse = askTools.convertDataToJsonObject(data.body)\r\n          if (callResponse) {\r\n            const simulationId = callResponse.id\r\n            debug(`Simulation created for simulation id ${simulationId}, polling for response ...`)\r\n\r\n            const pollSimulationResult = (responseBody) => {\r\n              const response = askTools.convertDataToJsonObject(responseBody)\r\n              if (response) {\r\n                if (!response.hasOwnProperty('status')) {\r\n                  reject(new Error(`Unable to get skill simulation result for simulation id ${simulationId}`))\r\n                } else if (response.status === askConstants.SKILL.SIMULATION_STATUS.IN_PROGRESS) {\r\n                  setTimeout(() => {\r\n                    askApi.callGetSimulation(simulationId, this.skillId, this.profile, debug.enabled, (data) => {\r\n                      pollSimulationResult(data.body)\r\n                    })\r\n                  }, 2000)\r\n                } else if (response.status === askConstants.SKILL.SIMULATION_STATUS.SUCCESS) {\r\n                  resolve()\r\n\r\n                  const simulationResult = askTools.convertDataToJsonObject(response.result.skillExecutionInfo.invocationResponse.body.response)\r\n                  debug(`got simulation result: ${util.inspect(simulationResult)}`)\r\n                  const messageText = simulationResult.outputSpeech.text || simulationResult.outputSpeech.ssml\r\n                  const botMsg = { sender: 'bot', sourceData: simulationResult, messageText }\r\n                  this.queueBotSays(botMsg)\r\n                } else if (response.status === askConstants.SKILL.SIMULATION_STATUS.FAILURE) {\r\n                  reject(new Error(`Skill simulation for simulation id ${simulationId} returned FAILURE`))\r\n                } else {\r\n                  reject(new Error(`Invalid response for skill simulation ${simulationId}`))\r\n                }\r\n              }\r\n            }\r\n            pollSimulationResult(data.body)\r\n          }\r\n        })\r\n      })\r\n    }\r\n    return Promise.resolve()\r\n  }\r\n\r\n  Stop () {\r\n    debug('Stop called')\r\n    return Promise.resolve()\r\n  }\r\n\r\n  Clean () {\r\n    debug('Clean called')\r\n    return Promise.resolve()\r\n  }\r\n}\r\n\r\nmodule.exports = {\r\n  PluginVersion: 1,\r\n  PluginClass: BotiumConnectorAlexaSmapi\r\n}\r\n"],"names":["const","debug","require$$0","askConstants","this","askTools"],"mappings":";;;;;;;;;;;;AAIAA,IAAMC,OAAK,GAAGC,KAAgB,CAAC,8BAA8B,EAAC;;AAE9D,IAAM,yBAAyB,GAC7B,kCAAW,EAAE,GAAsB,EAAE;sCAAR;;;MACvB,CAAC,YAAY,GAAG,aAAY;MAC5B,CAAC,IAAI,GAAG,KAAI;EACjB;;oCAED,QAAQ,wBAAI;SACL,CAAC,iBAAiB,EAAC;MACpB,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,KAAK,YAAY,IAAI,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,KAAK,YAAY,IAAE,MAAM,IAAI,KAAK,CAAC,iFAAiF,GAAC;MAClO,CAAC,IAAI,CAAC,IAAI,CAAC,qBAAqB,CAAC,IAAE,MAAM,IAAI,KAAK,CAAC,yCAAyC,GAAC;;SAE1F,OAAO,CAAC,OAAO,EAAE;EACzB;;oCAED,KAAK,qBAAI;SACF,CAAC,cAAc,EAAC;MACjB,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,IAAI,aAAY;MACnD,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,qBAAqB,EAAC;MAC3C,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,IAAI,QAAO;;MAEpD,IAAI,CAAC,IAAI,CAAC,0BAA0B,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,yBAAyB,CAAC,EAAE;QAC7E,CAAC,OAAO,GAAGC,SAAY,CAAC,WAAW,CAAC,eAAe,CAAC,aAAY;;WAE7D,CAAC,GAAG,CAAC,iBAAiB,GAAG,IAAI,CAAC,IAAI,CAAC,0BAA0B,EAAC;WAC9D,CAAC,GAAG,CAAC,gBAAgB,GAAG,IAAI,CAAC,IAAI,CAAC,yBAAyB,EAAC;GACpE,MAAM;QACD,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,wBAAwB,CAAC,IAAI,UAAS;GAChE;SACM,OAAO,CAAC,OAAO,EAAE;EACzB;;oCAED,KAAK,qBAAI;SACF,CAAC,cAAc,EAAC;SACd,OAAO,CAAC,OAAO,EAAE;EACzB;;oCAED,QAAQ,sBAAE,GAAG,EAAE;;;SACR,CAAC,iBAAiB,EAAC;MACpB,IAAI,CAAC,GAAG,KAAK,YAAY,EAAE;WACtB,IAAI,OAAO,WAAE,OAAO,EAAE,MAAM;gBAC3B,CAAC,iBAAiB,CAAC,IAAI,EAAE,GAAG,CAAC,WAAW,EAAEC,MAAI,CAAC,OAAO,EAAEA,MAAI,CAAC,MAAM,EAAEA,MAAI,CAAC,OAAO,EAAEH,OAAK,CAAC,OAAO,YAAG,IAAI;YACrG,YAAY,GAAGI,KAAQ,CAAC,uBAAuB,CAAC,IAAI,CAAC,IAAI,EAAC;YAC5D,YAAY,EAAE;cACV,YAAY,GAAG,YAAY,CAAC,GAAE;iBAC/B,4CAAyC,YAAY,kCAA6B;;cAEjF,oBAAoB,aAAI,YAAY;gBAClC,QAAQ,GAAGA,KAAQ,CAAC,uBAAuB,CAAC,YAAY,EAAC;gBAC3D,QAAQ,EAAE;kBACR,CAAC,QAAQ,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAE;sBAChC,CAAC,IAAI,KAAK,+DAA4D,YAAY,EAAG,EAAC;eAC7F,MAAM,IAAI,QAAQ,CAAC,MAAM,KAAKF,SAAY,CAAC,KAAK,CAAC,iBAAiB,CAAC,WAAW,EAAE;0BACrE;4BACF,CAAC,iBAAiB,CAAC,YAAY,EAAEC,MAAI,CAAC,OAAO,EAAEA,MAAI,CAAC,OAAO,EAAEH,OAAK,CAAC,OAAO,YAAG,IAAI;wCACjE,CAAC,IAAI,CAAC,IAAI,EAAC;mBAChC,EAAC;iBACH,EAAE,IAAI,EAAC;eACT,MAAM,IAAI,QAAQ,CAAC,MAAM,KAAKE,SAAY,CAAC,KAAK,CAAC,iBAAiB,CAAC,OAAO,EAAE;uBACpE,GAAE;;oBAEH,gBAAgB,GAAGE,KAAQ,CAAC,uBAAuB,CAAC,QAAQ,CAAC,MAAM,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,EAAC;uBACzH,+BAA2B,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,IAAG;oBAC3D,WAAW,GAAG,gBAAgB,CAAC,YAAY,CAAC,IAAI,IAAI,gBAAgB,CAAC,YAAY,CAAC,KAAI;oBACtF,MAAM,GAAG,EAAE,MAAM,EAAE,KAAK,EAAE,UAAU,EAAE,gBAAgB,eAAE,WAAW,GAAE;sBACvE,CAAC,YAAY,CAAC,MAAM,EAAC;eAC1B,MAAM,IAAI,QAAQ,CAAC,MAAM,KAAKF,SAAY,CAAC,KAAK,CAAC,iBAAiB,CAAC,OAAO,EAAE;sBACrE,CAAC,IAAI,KAAK,0CAAuC,YAAY,wBAAoB,EAAC;eACzF,MAAM;sBACC,CAAC,IAAI,KAAK,6CAA0C,YAAY,EAAG,EAAC;eAC3E;aACF;YACF;8BACmB,CAAC,IAAI,CAAC,IAAI,EAAC;SAChC;OACF,EAAC;KACH,CAAC;GACH;SACM,OAAO,CAAC,OAAO,EAAE;EACzB;;oCAED,IAAI,oBAAI;SACD,CAAC,aAAa,EAAC;SACb,OAAO,CAAC,OAAO,EAAE;EACzB;;oCAED,KAAK,qBAAI;SACF,CAAC,cAAc,EAAC;SACd,OAAO,CAAC,OAAO,EAAE;CACzB,CACF;;AAED,6BAAc,GAAG;EACf,aAAa,EAAE,CAAC;EAChB,WAAW,EAAE,yBAAyB;EACvC;;;;;;;;"}